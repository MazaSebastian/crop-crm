// Script de prueba para verificar notificaciones push
// Ejecutar en el navegador despu√©s de activar las notificaciones

async function testPushNotification() {
  try {
    // Verificar que las notificaciones est√©n activadas
    if (Notification.permission !== 'granted') {
      console.log('‚ùå Notificaciones no activadas');
      return;
    }

    console.log('‚úÖ Notificaciones activadas');

    // Enviar notificaci√≥n de prueba
    const notification = new Notification('üß™ Prueba de Notificaciones', {
      body: '¬°Las notificaciones push est√°n funcionando correctamente!',
      icon: '/icons/icon-192.png',
      badge: '/icons/icon-192.png',
      tag: 'test-notification'
    });

    // Mostrar notificaci√≥n por 5 segundos
    setTimeout(() => {
      notification.close();
    }, 5000);

    console.log('‚úÖ Notificaci√≥n de prueba enviada');

  } catch (error) {
    console.error('‚ùå Error en prueba:', error);
  }
}

// Funci√≥n para probar el endpoint de notificaciones
async function testNotificationEndpoint() {
  try {
    const response = await fetch('/api/push/public-key');
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ Endpoint de clave p√∫blica funcionando:', data.publicKey ? 'OK' : 'ERROR');
    } else {
      console.log('‚ùå Error en endpoint de clave p√∫blica:', response.status);
    }
  } catch (error) {
    console.error('‚ùå Error conectando al endpoint:', error);
  }
}

// Ejecutar pruebas
console.log('üß™ Iniciando pruebas de notificaciones push...');
testNotificationEndpoint();
testPushNotification();

// Instrucciones para el usuario
console.log(`
üìã Instrucciones de prueba:

1. Abre la consola del navegador (F12)
2. Ejecuta: testPushNotification()
3. Deber√≠as ver una notificaci√≥n de prueba
4. Si funciona, las notificaciones push est√°n configuradas correctamente

Para probar notificaciones autom√°ticas:
1. Ve a la secci√≥n "Comunicaciones"
2. Crea un nuevo aviso
3. Deber√≠as recibir una notificaci√≥n push autom√°tica
`);
