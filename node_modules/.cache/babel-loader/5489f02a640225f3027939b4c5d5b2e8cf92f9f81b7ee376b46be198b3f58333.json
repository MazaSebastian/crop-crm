{"ast":null,"code":"var _jsxFileName = \"/Users/sebamaza/Downloads/salon-fiestas-admin/src/context/CoordinationContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  currentSession: null,\n  eventInfo: null,\n  currentQuestionIndex: 0,\n  questions: [],\n  isLoading: false,\n  error: null\n};\nconst coordinationReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload\n      };\n    case 'SET_EVENT_INFO':\n      return {\n        ...state,\n        eventInfo: action.payload\n      };\n    case 'SET_QUESTIONS':\n      return {\n        ...state,\n        questions: action.payload\n      };\n    case 'SET_CURRENT_QUESTION':\n      return {\n        ...state,\n        currentQuestionIndex: action.payload\n      };\n    case 'ADD_ANSWER':\n      return {\n        ...state,\n        currentSession: state.currentSession ? {\n          ...state.currentSession,\n          answers: [...state.currentSession.answers, action.payload]\n        } : null\n      };\n    case 'UPDATE_ANSWER':\n      return {\n        ...state,\n        currentSession: state.currentSession ? {\n          ...state.currentSession,\n          answers: state.currentSession.answers.map(answer => answer.questionId === action.payload.questionId ? action.payload : answer)\n        } : null\n      };\n    case 'NEXT_QUESTION':\n      return {\n        ...state,\n        currentQuestionIndex: Math.min(state.currentQuestionIndex + 1, state.questions.length - 1)\n      };\n    case 'PREVIOUS_QUESTION':\n      return {\n        ...state,\n        currentQuestionIndex: Math.max(state.currentQuestionIndex - 1, 0)\n      };\n    case 'COMPLETE_SESSION':\n      return {\n        ...state,\n        currentSession: state.currentSession ? {\n          ...state.currentSession,\n          completed: true,\n          currentStep: state.questions.length,\n          updatedAt: new Date().toISOString()\n        } : null\n      };\n    case 'RESET_SESSION':\n      return initialState;\n    default:\n      return state;\n  }\n};\nconst CoordinationContext = /*#__PURE__*/createContext(undefined);\nexport const useCoordination = () => {\n  _s();\n  const context = useContext(CoordinationContext);\n  if (!context) {\n    throw new Error('useCoordination debe ser usado dentro de CoordinationProvider');\n  }\n  return context;\n};\n_s(useCoordination, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CoordinationProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(coordinationReducer, initialState);\n\n  // Simular verificación del código de evento con el sistema de Janos\n  const verifyEventCode = async code => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    dispatch({\n      type: 'SET_ERROR',\n      payload: null\n    });\n    try {\n      // Simular llamada a API\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock data - en producción esto vendría del sistema de Janos\n      const mockEventData = {\n        code,\n        clientName: 'María González',\n        eventType: 'wedding',\n        eventDate: '2024-12-15',\n        eventTime: '20:00',\n        guestCount: 150,\n        venue: 'Salón Principal'\n      };\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      return mockEventData;\n    } catch (error) {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Error al verificar el código de evento'\n      });\n      throw error;\n    }\n  };\n\n  // Iniciar sesión de coordinación\n  const startCoordination = async eventInfo => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      // Obtener preguntas según el tipo de evento\n      const questions = getQuestionsByEventType(eventInfo.eventType);\n      const session = {\n        id: `session_${Date.now()}`,\n        eventCode: eventInfo.code,\n        eventInfo,\n        answers: [],\n        currentStep: 1,\n        totalSteps: questions.length,\n        completed: false,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      dispatch({\n        type: 'SET_EVENT_INFO',\n        payload: eventInfo\n      });\n      dispatch({\n        type: 'SET_QUESTIONS',\n        payload: questions\n      });\n      dispatch({\n        type: 'SET_CURRENT_QUESTION',\n        payload: 0\n      });\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    } catch (error) {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Error al iniciar la coordinación'\n      });\n    }\n  };\n\n  // Obtener preguntas según el tipo de evento\n  const getQuestionsByEventType = eventType => {\n    const baseQuestions = [{\n      id: 'contact_name',\n      question: '¿Cuál es tu nombre completo?',\n      type: 'text',\n      required: true,\n      order: 1,\n      category: 'general'\n    }, {\n      id: 'contact_phone',\n      question: '¿Cuál es tu número de teléfono?',\n      type: 'text',\n      required: true,\n      order: 2,\n      category: 'general'\n    }];\n    const eventSpecificQuestions = {\n      wedding: [{\n        id: 'wedding_style',\n        question: '¿Qué estilo de música prefieres para tu boda?',\n        type: 'select',\n        options: ['Clásica', 'Romántica', 'Pop/Rock', 'Latina', 'Mixta'],\n        required: true,\n        order: 3,\n        category: 'music'\n      }, {\n        id: 'first_dance',\n        question: '¿Tienes una canción especial para el primer baile?',\n        type: 'text',\n        required: false,\n        order: 4,\n        category: 'music'\n      }, {\n        id: 'special_moments',\n        question: '¿Hay momentos especiales que quieres que el DJ anuncie?',\n        type: 'textarea',\n        required: false,\n        order: 5,\n        category: 'special_requests'\n      }],\n      birthday: [{\n        id: 'birthday_age',\n        question: '¿Qué edad cumple la persona?',\n        type: 'number',\n        required: true,\n        order: 3,\n        category: 'general'\n      }, {\n        id: 'birthday_theme',\n        question: '¿Hay algún tema o color específico para la fiesta?',\n        type: 'text',\n        required: false,\n        order: 4,\n        category: 'general'\n      }, {\n        id: 'birthday_music',\n        question: '¿Qué tipo de música prefieres?',\n        type: 'select',\n        options: ['Pop', 'Rock', 'Reggaeton', 'Electrónica', 'Mixta'],\n        required: true,\n        order: 5,\n        category: 'music'\n      }],\n      corporate: [{\n        id: 'corporate_type',\n        question: '¿Qué tipo de evento corporativo es?',\n        type: 'select',\n        options: ['Conferencia', 'Cena de gala', 'Team building', 'Presentación', 'Otro'],\n        required: true,\n        order: 3,\n        category: 'general'\n      }, {\n        id: 'corporate_formality',\n        question: '¿Qué nivel de formalidad prefieres?',\n        type: 'select',\n        options: ['Muy formal', 'Semi-formal', 'Casual'],\n        required: true,\n        order: 4,\n        category: 'general'\n      }],\n      quinceanera: [{\n        id: 'quince_theme',\n        question: '¿Cuál es el tema de la quinceañera?',\n        type: 'text',\n        required: true,\n        order: 3,\n        category: 'general'\n      }, {\n        id: 'quince_colors',\n        question: '¿Cuáles son los colores principales?',\n        type: 'text',\n        required: true,\n        order: 4,\n        category: 'general'\n      }, {\n        id: 'quince_music',\n        question: '¿Qué tipo de música prefieres?',\n        type: 'select',\n        options: ['Pop latino', 'Reggaeton', 'Bachata', 'Salsa', 'Mixta'],\n        required: true,\n        order: 5,\n        category: 'music'\n      }],\n      graduation: [{\n        id: 'graduation_type',\n        question: '¿Qué tipo de graduación es?',\n        type: 'select',\n        options: ['Universidad', 'Secundaria', 'Primaria', 'Otro'],\n        required: true,\n        order: 3,\n        category: 'general'\n      }, {\n        id: 'graduation_music',\n        question: '¿Qué tipo de música prefieres?',\n        type: 'select',\n        options: ['Pop', 'Rock', 'Electrónica', 'Mixta'],\n        required: true,\n        order: 4,\n        category: 'music'\n      }],\n      other: [{\n        id: 'other_type',\n        question: '¿Qué tipo de evento es?',\n        type: 'text',\n        required: true,\n        order: 3,\n        category: 'general'\n      }, {\n        id: 'other_description',\n        question: 'Describe brevemente el evento',\n        type: 'textarea',\n        required: true,\n        order: 4,\n        category: 'general'\n      }]\n    };\n    return [...baseQuestions, ...(eventSpecificQuestions[eventType] || [])];\n  };\n  const answerQuestion = (questionId, answer) => {\n    var _state$currentSession;\n    const answerObj = {\n      questionId,\n      answer\n    };\n    const existingAnswerIndex = (_state$currentSession = state.currentSession) === null || _state$currentSession === void 0 ? void 0 : _state$currentSession.answers.findIndex(a => a.questionId === questionId);\n    if (existingAnswerIndex !== undefined && existingAnswerIndex >= 0) {\n      dispatch({\n        type: 'UPDATE_ANSWER',\n        payload: answerObj\n      });\n    } else {\n      dispatch({\n        type: 'ADD_ANSWER',\n        payload: answerObj\n      });\n    }\n  };\n  const nextQuestion = () => {\n    dispatch({\n      type: 'NEXT_QUESTION'\n    });\n  };\n  const previousQuestion = () => {\n    dispatch({\n      type: 'PREVIOUS_QUESTION'\n    });\n  };\n  const completeSession = () => {\n    dispatch({\n      type: 'COMPLETE_SESSION'\n    });\n  };\n  const resetSession = () => {\n    dispatch({\n      type: 'RESET_SESSION'\n    });\n  };\n  const getCurrentQuestion = () => {\n    return state.questions[state.currentQuestionIndex] || null;\n  };\n  const getProgress = () => {\n    const current = state.currentQuestionIndex + 1;\n    const total = state.questions.length;\n    const percentage = total > 0 ? Math.round(current / total * 100) : 0;\n    return {\n      current,\n      total,\n      percentage\n    };\n  };\n  const value = {\n    state,\n    verifyEventCode,\n    startCoordination,\n    answerQuestion,\n    nextQuestion,\n    previousQuestion,\n    completeSession,\n    resetSession,\n    getCurrentQuestion,\n    getProgress\n  };\n  return /*#__PURE__*/_jsxDEV(CoordinationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 419,\n    columnNumber: 5\n  }, this);\n};\n_s2(CoordinationProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = CoordinationProvider;\nvar _c;\n$RefreshReg$(_c, \"CoordinationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","initialState","currentSession","eventInfo","currentQuestionIndex","questions","isLoading","error","coordinationReducer","state","action","type","payload","answers","map","answer","questionId","Math","min","length","max","completed","currentStep","updatedAt","Date","toISOString","CoordinationContext","undefined","useCoordination","_s","context","Error","CoordinationProvider","children","_s2","dispatch","verifyEventCode","code","Promise","resolve","setTimeout","mockEventData","clientName","eventType","eventDate","eventTime","guestCount","venue","startCoordination","getQuestionsByEventType","session","id","now","eventCode","totalSteps","createdAt","baseQuestions","question","required","order","category","eventSpecificQuestions","wedding","options","birthday","corporate","quinceanera","graduation","other","answerQuestion","_state$currentSession","answerObj","existingAnswerIndex","findIndex","a","nextQuestion","previousQuestion","completeSession","resetSession","getCurrentQuestion","getProgress","current","total","percentage","round","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sebamaza/Downloads/salon-fiestas-admin/src/context/CoordinationContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\nimport { \n  CoordinationSession, \n  EventCode, \n  CoordinationAnswer, \n  CoordinationQuestion,\n  QuestionTemplate \n} from '../types';\n\ninterface CoordinationState {\n  currentSession: CoordinationSession | null;\n  eventInfo: EventCode | null;\n  currentQuestionIndex: number;\n  questions: CoordinationQuestion[];\n  isLoading: boolean;\n  error: string | null;\n}\n\ntype CoordinationAction =\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | null }\n  | { type: 'SET_EVENT_INFO'; payload: EventCode }\n  | { type: 'SET_QUESTIONS'; payload: CoordinationQuestion[] }\n  | { type: 'SET_CURRENT_QUESTION'; payload: number }\n  | { type: 'ADD_ANSWER'; payload: CoordinationAnswer }\n  | { type: 'UPDATE_ANSWER'; payload: CoordinationAnswer }\n  | { type: 'NEXT_QUESTION' }\n  | { type: 'PREVIOUS_QUESTION' }\n  | { type: 'COMPLETE_SESSION' }\n  | { type: 'RESET_SESSION' };\n\nconst initialState: CoordinationState = {\n  currentSession: null,\n  eventInfo: null,\n  currentQuestionIndex: 0,\n  questions: [],\n  isLoading: false,\n  error: null,\n};\n\nconst coordinationReducer = (state: CoordinationState, action: CoordinationAction): CoordinationState => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload };\n    \n    case 'SET_ERROR':\n      return { ...state, error: action.payload };\n    \n    case 'SET_EVENT_INFO':\n      return { ...state, eventInfo: action.payload };\n    \n    case 'SET_QUESTIONS':\n      return { ...state, questions: action.payload };\n    \n    case 'SET_CURRENT_QUESTION':\n      return { ...state, currentQuestionIndex: action.payload };\n    \n    case 'ADD_ANSWER':\n      return {\n        ...state,\n        currentSession: state.currentSession ? {\n          ...state.currentSession,\n          answers: [...state.currentSession.answers, action.payload]\n        } : null\n      };\n    \n    case 'UPDATE_ANSWER':\n      return {\n        ...state,\n        currentSession: state.currentSession ? {\n          ...state.currentSession,\n          answers: state.currentSession.answers.map(answer =>\n            answer.questionId === action.payload.questionId ? action.payload : answer\n          )\n        } : null\n      };\n    \n    case 'NEXT_QUESTION':\n      return {\n        ...state,\n        currentQuestionIndex: Math.min(state.currentQuestionIndex + 1, state.questions.length - 1)\n      };\n    \n    case 'PREVIOUS_QUESTION':\n      return {\n        ...state,\n        currentQuestionIndex: Math.max(state.currentQuestionIndex - 1, 0)\n      };\n    \n    case 'COMPLETE_SESSION':\n      return {\n        ...state,\n        currentSession: state.currentSession ? {\n          ...state.currentSession,\n          completed: true,\n          currentStep: state.questions.length,\n          updatedAt: new Date().toISOString()\n        } : null\n      };\n    \n    case 'RESET_SESSION':\n      return initialState;\n    \n    default:\n      return state;\n  }\n};\n\ninterface CoordinationContextType {\n  state: CoordinationState;\n  verifyEventCode: (code: string) => Promise<EventCode>;\n  startCoordination: (eventInfo: EventCode) => Promise<void>;\n  answerQuestion: (questionId: string, answer: string | string[] | number) => void;\n  nextQuestion: () => void;\n  previousQuestion: () => void;\n  completeSession: () => void;\n  resetSession: () => void;\n  getCurrentQuestion: () => CoordinationQuestion | null;\n  getProgress: () => { current: number; total: number; percentage: number };\n}\n\nconst CoordinationContext = createContext<CoordinationContextType | undefined>(undefined);\n\nexport const useCoordination = () => {\n  const context = useContext(CoordinationContext);\n  if (!context) {\n    throw new Error('useCoordination debe ser usado dentro de CoordinationProvider');\n  }\n  return context;\n};\n\ninterface CoordinationProviderProps {\n  children: ReactNode;\n}\n\nexport const CoordinationProvider: React.FC<CoordinationProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(coordinationReducer, initialState);\n\n  // Simular verificación del código de evento con el sistema de Janos\n  const verifyEventCode = async (code: string): Promise<EventCode> => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    dispatch({ type: 'SET_ERROR', payload: null });\n\n    try {\n      // Simular llamada a API\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Mock data - en producción esto vendría del sistema de Janos\n      const mockEventData: EventCode = {\n        code,\n        clientName: 'María González',\n        eventType: 'wedding',\n        eventDate: '2024-12-15',\n        eventTime: '20:00',\n        guestCount: 150,\n        venue: 'Salón Principal'\n      };\n\n      dispatch({ type: 'SET_LOADING', payload: false });\n      return mockEventData;\n    } catch (error) {\n      dispatch({ type: 'SET_LOADING', payload: false });\n      dispatch({ type: 'SET_ERROR', payload: 'Error al verificar el código de evento' });\n      throw error;\n    }\n  };\n\n  // Iniciar sesión de coordinación\n  const startCoordination = async (eventInfo: EventCode): Promise<void> => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    \n    try {\n      // Obtener preguntas según el tipo de evento\n      const questions = getQuestionsByEventType(eventInfo.eventType);\n      \n      const session: CoordinationSession = {\n        id: `session_${Date.now()}`,\n        eventCode: eventInfo.code,\n        eventInfo,\n        answers: [],\n        currentStep: 1,\n        totalSteps: questions.length,\n        completed: false,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n\n      dispatch({ type: 'SET_EVENT_INFO', payload: eventInfo });\n      dispatch({ type: 'SET_QUESTIONS', payload: questions });\n      dispatch({ type: 'SET_CURRENT_QUESTION', payload: 0 });\n      dispatch({ type: 'SET_LOADING', payload: false });\n    } catch (error) {\n      dispatch({ type: 'SET_LOADING', payload: false });\n      dispatch({ type: 'SET_ERROR', payload: 'Error al iniciar la coordinación' });\n    }\n  };\n\n  // Obtener preguntas según el tipo de evento\n  const getQuestionsByEventType = (eventType: EventCode['eventType']): CoordinationQuestion[] => {\n    const baseQuestions: CoordinationQuestion[] = [\n      {\n        id: 'contact_name',\n        question: '¿Cuál es tu nombre completo?',\n        type: 'text',\n        required: true,\n        order: 1,\n        category: 'general'\n      },\n      {\n        id: 'contact_phone',\n        question: '¿Cuál es tu número de teléfono?',\n        type: 'text',\n        required: true,\n        order: 2,\n        category: 'general'\n      }\n    ];\n\n    const eventSpecificQuestions: Record<EventCode['eventType'], CoordinationQuestion[]> = {\n      wedding: [\n        {\n          id: 'wedding_style',\n          question: '¿Qué estilo de música prefieres para tu boda?',\n          type: 'select',\n          options: ['Clásica', 'Romántica', 'Pop/Rock', 'Latina', 'Mixta'],\n          required: true,\n          order: 3,\n          category: 'music'\n        },\n        {\n          id: 'first_dance',\n          question: '¿Tienes una canción especial para el primer baile?',\n          type: 'text',\n          required: false,\n          order: 4,\n          category: 'music'\n        },\n        {\n          id: 'special_moments',\n          question: '¿Hay momentos especiales que quieres que el DJ anuncie?',\n          type: 'textarea',\n          required: false,\n          order: 5,\n          category: 'special_requests'\n        }\n      ],\n      birthday: [\n        {\n          id: 'birthday_age',\n          question: '¿Qué edad cumple la persona?',\n          type: 'number',\n          required: true,\n          order: 3,\n          category: 'general'\n        },\n        {\n          id: 'birthday_theme',\n          question: '¿Hay algún tema o color específico para la fiesta?',\n          type: 'text',\n          required: false,\n          order: 4,\n          category: 'general'\n        },\n        {\n          id: 'birthday_music',\n          question: '¿Qué tipo de música prefieres?',\n          type: 'select',\n          options: ['Pop', 'Rock', 'Reggaeton', 'Electrónica', 'Mixta'],\n          required: true,\n          order: 5,\n          category: 'music'\n        }\n      ],\n      corporate: [\n        {\n          id: 'corporate_type',\n          question: '¿Qué tipo de evento corporativo es?',\n          type: 'select',\n          options: ['Conferencia', 'Cena de gala', 'Team building', 'Presentación', 'Otro'],\n          required: true,\n          order: 3,\n          category: 'general'\n        },\n        {\n          id: 'corporate_formality',\n          question: '¿Qué nivel de formalidad prefieres?',\n          type: 'select',\n          options: ['Muy formal', 'Semi-formal', 'Casual'],\n          required: true,\n          order: 4,\n          category: 'general'\n        }\n      ],\n      quinceanera: [\n        {\n          id: 'quince_theme',\n          question: '¿Cuál es el tema de la quinceañera?',\n          type: 'text',\n          required: true,\n          order: 3,\n          category: 'general'\n        },\n        {\n          id: 'quince_colors',\n          question: '¿Cuáles son los colores principales?',\n          type: 'text',\n          required: true,\n          order: 4,\n          category: 'general'\n        },\n        {\n          id: 'quince_music',\n          question: '¿Qué tipo de música prefieres?',\n          type: 'select',\n          options: ['Pop latino', 'Reggaeton', 'Bachata', 'Salsa', 'Mixta'],\n          required: true,\n          order: 5,\n          category: 'music'\n        }\n      ],\n      graduation: [\n        {\n          id: 'graduation_type',\n          question: '¿Qué tipo de graduación es?',\n          type: 'select',\n          options: ['Universidad', 'Secundaria', 'Primaria', 'Otro'],\n          required: true,\n          order: 3,\n          category: 'general'\n        },\n        {\n          id: 'graduation_music',\n          question: '¿Qué tipo de música prefieres?',\n          type: 'select',\n          options: ['Pop', 'Rock', 'Electrónica', 'Mixta'],\n          required: true,\n          order: 4,\n          category: 'music'\n        }\n      ],\n      other: [\n        {\n          id: 'other_type',\n          question: '¿Qué tipo de evento es?',\n          type: 'text',\n          required: true,\n          order: 3,\n          category: 'general'\n        },\n        {\n          id: 'other_description',\n          question: 'Describe brevemente el evento',\n          type: 'textarea',\n          required: true,\n          order: 4,\n          category: 'general'\n        }\n      ]\n    };\n\n    return [...baseQuestions, ...(eventSpecificQuestions[eventType] || [])];\n  };\n\n  const answerQuestion = (questionId: string, answer: string | string[] | number) => {\n    const answerObj: CoordinationAnswer = { questionId, answer };\n    \n    const existingAnswerIndex = state.currentSession?.answers.findIndex(\n      a => a.questionId === questionId\n    );\n\n    if (existingAnswerIndex !== undefined && existingAnswerIndex >= 0) {\n      dispatch({ type: 'UPDATE_ANSWER', payload: answerObj });\n    } else {\n      dispatch({ type: 'ADD_ANSWER', payload: answerObj });\n    }\n  };\n\n  const nextQuestion = () => {\n    dispatch({ type: 'NEXT_QUESTION' });\n  };\n\n  const previousQuestion = () => {\n    dispatch({ type: 'PREVIOUS_QUESTION' });\n  };\n\n  const completeSession = () => {\n    dispatch({ type: 'COMPLETE_SESSION' });\n  };\n\n  const resetSession = () => {\n    dispatch({ type: 'RESET_SESSION' });\n  };\n\n  const getCurrentQuestion = (): CoordinationQuestion | null => {\n    return state.questions[state.currentQuestionIndex] || null;\n  };\n\n  const getProgress = () => {\n    const current = state.currentQuestionIndex + 1;\n    const total = state.questions.length;\n    const percentage = total > 0 ? Math.round((current / total) * 100) : 0;\n    return { current, total, percentage };\n  };\n\n  const value: CoordinationContextType = {\n    state,\n    verifyEventCode,\n    startCoordination,\n    answerQuestion,\n    nextQuestion,\n    previousQuestion,\n    completeSession,\n    resetSession,\n    getCurrentQuestion,\n    getProgress\n  };\n\n  return (\n    <CoordinationContext.Provider value={value}>\n      {children}\n    </CoordinationContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}