{"ast":null,"code":"var _jsxFileName = \"/Users/sebamaza/Downloads/salon-fiestas-admin/src/context/TimeClockContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  records: [],\n  todayRecord: null,\n  isLoading: false,\n  error: null\n};\nconst timeClockReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload\n      };\n    case 'ADD_RECORD':\n      return {\n        ...state,\n        records: [action.payload, ...state.records],\n        todayRecord: action.payload.date === new Date().toISOString().split('T')[0] ? action.payload : state.todayRecord\n      };\n    case 'UPDATE_RECORD':\n      return {\n        ...state,\n        records: state.records.map(record => record.id === action.payload.id ? action.payload : record),\n        todayRecord: action.payload.date === new Date().toISOString().split('T')[0] ? action.payload : state.todayRecord\n      };\n    case 'SET_RECORDS':\n      return {\n        ...state,\n        records: action.payload,\n        todayRecord: action.payload.find(record => record.date === new Date().toISOString().split('T')[0]) || null\n      };\n    case 'SET_TODAY_RECORD':\n      return {\n        ...state,\n        todayRecord: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst TimeClockContext = /*#__PURE__*/createContext(undefined);\nexport const useTimeClock = () => {\n  _s();\n  const context = useContext(TimeClockContext);\n  if (!context) {\n    throw new Error('useTimeClock debe ser usado dentro de TimeClockProvider');\n  }\n  return context;\n};\n_s(useTimeClock, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const TimeClockProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(timeClockReducer, initialState);\n\n  // Cargar registros desde localStorage al inicializar\n  useEffect(() => {\n    const loadRecords = () => {\n      try {\n        const savedRecords = localStorage.getItem('timeClockRecords');\n        if (savedRecords) {\n          const records = JSON.parse(savedRecords);\n          dispatch({\n            type: 'SET_RECORDS',\n            payload: records\n          });\n        }\n      } catch (error) {\n        console.error('Error al cargar registros:', error);\n        dispatch({\n          type: 'SET_ERROR',\n          payload: 'Error al cargar registros'\n        });\n      }\n    };\n    loadRecords();\n  }, []);\n\n  // Guardar registros en localStorage cuando cambien\n  useEffect(() => {\n    try {\n      localStorage.setItem('timeClockRecords', JSON.stringify(state.records));\n    } catch (error) {\n      console.error('Error al guardar registros:', error);\n    }\n  }, [state.records]);\n\n  // Función para obtener fecha y hora local\n  const getLocalDateTime = () => {\n    const now = new Date();\n    const date = now.toISOString().split('T')[0]; // YYYY-MM-DD\n    const time = now.toLocaleTimeString('es-AR', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n    const timestamp = now.getTime();\n    return {\n      date,\n      time,\n      timestamp\n    };\n  };\n\n  // Fichar entrada\n  const clockIn = async (employeeId, employeeName, location) => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    dispatch({\n      type: 'SET_ERROR',\n      payload: null\n    });\n    try {\n      // Simular delay de procesamiento\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const {\n        date,\n        time,\n        timestamp\n      } = getLocalDateTime();\n      const newRecord = {\n        id: `record_${timestamp}`,\n        employeeId,\n        employeeName,\n        date,\n        timeIn: time,\n        timeOut: null,\n        location,\n        status: 'in',\n        timestamp\n      };\n      dispatch({\n        type: 'ADD_RECORD',\n        payload: newRecord\n      });\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      return newRecord;\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Error al registrar fichaje de entrada'\n      });\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      throw error;\n    }\n  };\n\n  // Fichar salida\n  const clockOut = async recordId => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    dispatch({\n      type: 'SET_ERROR',\n      payload: null\n    });\n    try {\n      // Simular delay de procesamiento\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const record = state.records.find(r => r.id === recordId);\n      if (!record) {\n        throw new Error('Registro no encontrado');\n      }\n      const {\n        time\n      } = getLocalDateTime();\n      const updatedRecord = {\n        ...record,\n        timeOut: time,\n        status: 'complete'\n      };\n      dispatch({\n        type: 'UPDATE_RECORD',\n        payload: updatedRecord\n      });\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      return updatedRecord;\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Error al registrar fichaje de salida'\n      });\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      throw error;\n    }\n  };\n\n  // Obtener todos los registros\n  const getRecords = () => {\n    return state.records.sort((a, b) => b.timestamp - a.timestamp); // Más recientes primero\n  };\n\n  // Obtener registro de hoy\n  const getTodayRecord = () => {\n    return state.todayRecord;\n  };\n\n  // Verificar si puede fichar entrada\n  const canClockIn = () => {\n    return !state.todayRecord || state.todayRecord.status === 'complete';\n  };\n\n  // Verificar si puede fichar salida\n  const canClockOut = () => {\n    return !!(state.todayRecord && state.todayRecord.status === 'in');\n  };\n\n  // Exportar registros\n  const exportRecords = () => {\n    try {\n      const records = getRecords();\n      const csvContent = [['Fecha', 'Entrada', 'Salida', 'Ubicación', 'Estado', 'Empleado'], ...records.map(record => [new Date(record.date).toLocaleDateString('es-AR'), record.timeIn || '-', record.timeOut || '-', record.location, record.status === 'in' ? 'En trabajo' : record.status === 'out' ? 'Salida' : 'Completo', record.employeeName])].map(row => row.join(',')).join('\\n');\n      const blob = new Blob([csvContent], {\n        type: 'text/csv;charset=utf-8;'\n      });\n      const link = document.createElement('a');\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', `fichajes_${new Date().toISOString().split('T')[0]}.csv`);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (error) {\n      console.error('Error al exportar:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Error al exportar registros'\n      });\n    }\n  };\n  const value = {\n    state,\n    clockIn,\n    clockOut,\n    getRecords,\n    getTodayRecord,\n    canClockIn,\n    canClockOut,\n    exportRecords\n  };\n  return /*#__PURE__*/_jsxDEV(TimeClockContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n};\n_s2(TimeClockProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = TimeClockProvider;\nvar _c;\n$RefreshReg$(_c, \"TimeClockProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","initialState","records","todayRecord","isLoading","error","timeClockReducer","state","action","type","payload","date","Date","toISOString","split","map","record","id","find","TimeClockContext","undefined","useTimeClock","_s","context","Error","TimeClockProvider","children","_s2","dispatch","loadRecords","savedRecords","localStorage","getItem","JSON","parse","console","setItem","stringify","getLocalDateTime","now","time","toLocaleTimeString","hour","minute","second","timestamp","getTime","clockIn","employeeId","employeeName","location","Promise","resolve","setTimeout","newRecord","timeIn","timeOut","status","clockOut","recordId","r","updatedRecord","getRecords","sort","a","b","getTodayRecord","canClockIn","canClockOut","exportRecords","csvContent","toLocaleDateString","row","join","blob","Blob","link","document","createElement","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sebamaza/Downloads/salon-fiestas-admin/src/context/TimeClockContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode, useEffect } from 'react';\n\nexport interface TimeRecord {\n  id: string;\n  employeeId: string;\n  employeeName: string;\n  date: string;\n  timeIn: string | null;\n  timeOut: string | null;\n  location: string;\n  status: 'in' | 'out' | 'complete';\n  timestamp: number; // Timestamp local para ordenamiento\n}\n\ninterface TimeClockState {\n  records: TimeRecord[];\n  todayRecord: TimeRecord | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\ntype TimeClockAction =\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | null }\n  | { type: 'ADD_RECORD'; payload: TimeRecord }\n  | { type: 'UPDATE_RECORD'; payload: TimeRecord }\n  | { type: 'SET_RECORDS'; payload: TimeRecord[] }\n  | { type: 'SET_TODAY_RECORD'; payload: TimeRecord | null };\n\nconst initialState: TimeClockState = {\n  records: [],\n  todayRecord: null,\n  isLoading: false,\n  error: null,\n};\n\nconst timeClockReducer = (state: TimeClockState, action: TimeClockAction): TimeClockState => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload };\n    \n    case 'SET_ERROR':\n      return { ...state, error: action.payload };\n    \n    case 'ADD_RECORD':\n      return {\n        ...state,\n        records: [action.payload, ...state.records],\n        todayRecord: action.payload.date === new Date().toISOString().split('T')[0] ? action.payload : state.todayRecord\n      };\n    \n    case 'UPDATE_RECORD':\n      return {\n        ...state,\n        records: state.records.map(record => \n          record.id === action.payload.id ? action.payload : record\n        ),\n        todayRecord: action.payload.date === new Date().toISOString().split('T')[0] ? action.payload : state.todayRecord\n      };\n    \n    case 'SET_RECORDS':\n      return {\n        ...state,\n        records: action.payload,\n        todayRecord: action.payload.find(record => \n          record.date === new Date().toISOString().split('T')[0]\n        ) || null\n      };\n    \n    case 'SET_TODAY_RECORD':\n      return { ...state, todayRecord: action.payload };\n    \n    default:\n      return state;\n  }\n};\n\ninterface TimeClockContextType {\n  state: TimeClockState;\n  clockIn: (employeeId: string, employeeName: string, location: string) => Promise<TimeRecord>;\n  clockOut: (recordId: string) => Promise<TimeRecord>;\n  getRecords: () => TimeRecord[];\n  getTodayRecord: () => TimeRecord | null;\n  canClockIn: () => boolean;\n  canClockOut: () => boolean;\n  exportRecords: () => void;\n}\n\nconst TimeClockContext = createContext<TimeClockContextType | undefined>(undefined);\n\nexport const useTimeClock = () => {\n  const context = useContext(TimeClockContext);\n  if (!context) {\n    throw new Error('useTimeClock debe ser usado dentro de TimeClockProvider');\n  }\n  return context;\n};\n\ninterface TimeClockProviderProps {\n  children: ReactNode;\n}\n\nexport const TimeClockProvider: React.FC<TimeClockProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(timeClockReducer, initialState);\n\n  // Cargar registros desde localStorage al inicializar\n  useEffect(() => {\n    const loadRecords = () => {\n      try {\n        const savedRecords = localStorage.getItem('timeClockRecords');\n        if (savedRecords) {\n          const records: TimeRecord[] = JSON.parse(savedRecords);\n          dispatch({ type: 'SET_RECORDS', payload: records });\n        }\n      } catch (error) {\n        console.error('Error al cargar registros:', error);\n        dispatch({ type: 'SET_ERROR', payload: 'Error al cargar registros' });\n      }\n    };\n\n    loadRecords();\n  }, []);\n\n  // Guardar registros en localStorage cuando cambien\n  useEffect(() => {\n    try {\n      localStorage.setItem('timeClockRecords', JSON.stringify(state.records));\n    } catch (error) {\n      console.error('Error al guardar registros:', error);\n    }\n  }, [state.records]);\n\n  // Función para obtener fecha y hora local\n  const getLocalDateTime = () => {\n    const now = new Date();\n    const date = now.toISOString().split('T')[0]; // YYYY-MM-DD\n    const time = now.toLocaleTimeString('es-AR', { \n      hour: '2-digit', \n      minute: '2-digit',\n      second: '2-digit'\n    });\n    const timestamp = now.getTime();\n    \n    return { date, time, timestamp };\n  };\n\n  // Fichar entrada\n  const clockIn = async (employeeId: string, employeeName: string, location: string): Promise<TimeRecord> => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    dispatch({ type: 'SET_ERROR', payload: null });\n\n    try {\n      // Simular delay de procesamiento\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      const { date, time, timestamp } = getLocalDateTime();\n      \n      const newRecord: TimeRecord = {\n        id: `record_${timestamp}`,\n        employeeId,\n        employeeName,\n        date,\n        timeIn: time,\n        timeOut: null,\n        location,\n        status: 'in',\n        timestamp\n      };\n\n      dispatch({ type: 'ADD_RECORD', payload: newRecord });\n      dispatch({ type: 'SET_LOADING', payload: false });\n      \n      return newRecord;\n    } catch (error) {\n      dispatch({ type: 'SET_ERROR', payload: 'Error al registrar fichaje de entrada' });\n      dispatch({ type: 'SET_LOADING', payload: false });\n      throw error;\n    }\n  };\n\n  // Fichar salida\n  const clockOut = async (recordId: string): Promise<TimeRecord> => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    dispatch({ type: 'SET_ERROR', payload: null });\n\n    try {\n      // Simular delay de procesamiento\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      const record = state.records.find(r => r.id === recordId);\n      if (!record) {\n        throw new Error('Registro no encontrado');\n      }\n\n      const { time } = getLocalDateTime();\n      \n      const updatedRecord: TimeRecord = {\n        ...record,\n        timeOut: time,\n        status: 'complete'\n      };\n\n      dispatch({ type: 'UPDATE_RECORD', payload: updatedRecord });\n      dispatch({ type: 'SET_LOADING', payload: false });\n      \n      return updatedRecord;\n    } catch (error) {\n      dispatch({ type: 'SET_ERROR', payload: 'Error al registrar fichaje de salida' });\n      dispatch({ type: 'SET_LOADING', payload: false });\n      throw error;\n    }\n  };\n\n  // Obtener todos los registros\n  const getRecords = (): TimeRecord[] => {\n    return state.records.sort((a, b) => b.timestamp - a.timestamp); // Más recientes primero\n  };\n\n  // Obtener registro de hoy\n  const getTodayRecord = (): TimeRecord | null => {\n    return state.todayRecord;\n  };\n\n  // Verificar si puede fichar entrada\n  const canClockIn = (): boolean => {\n    return !state.todayRecord || state.todayRecord.status === 'complete';\n  };\n\n  // Verificar si puede fichar salida\n  const canClockOut = (): boolean => {\n    return !!(state.todayRecord && state.todayRecord.status === 'in');\n  };\n\n  // Exportar registros\n  const exportRecords = () => {\n    try {\n      const records = getRecords();\n      const csvContent = [\n        ['Fecha', 'Entrada', 'Salida', 'Ubicación', 'Estado', 'Empleado'],\n        ...records.map(record => [\n          new Date(record.date).toLocaleDateString('es-AR'),\n          record.timeIn || '-',\n          record.timeOut || '-',\n          record.location,\n          record.status === 'in' ? 'En trabajo' : \n          record.status === 'out' ? 'Salida' : 'Completo',\n          record.employeeName\n        ])\n      ].map(row => row.join(',')).join('\\n');\n\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n      const link = document.createElement('a');\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', `fichajes_${new Date().toISOString().split('T')[0]}.csv`);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (error) {\n      console.error('Error al exportar:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Error al exportar registros' });\n    }\n  };\n\n  const value: TimeClockContextType = {\n    state,\n    clockIn,\n    clockOut,\n    getRecords,\n    getTodayRecord,\n    canClockIn,\n    canClockOut,\n    exportRecords\n  };\n\n  return (\n    <TimeClockContext.Provider value={value}>\n      {children}\n    </TimeClockContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}