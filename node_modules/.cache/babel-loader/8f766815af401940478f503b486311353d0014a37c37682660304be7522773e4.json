{"ast":null,"code":"var _jsxFileName = \"/Users/sebamaza/Downloads/salon-fiestas-admin/src/components/LiveChat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { FaComments, FaPaperPlane, FaTimes, FaExclamationTriangle, FaBell } from 'react-icons/fa';\nimport simpleConnectionService from '../services/simpleConnectionService';\nimport { mockChatMessages, simulateChatMessage } from '../services/mockDataService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatContainer = styled.div`\n  position: fixed;\n  bottom: 2rem;\n  right: 2rem;\n  width: 400px;\n  height: 500px;\n  background: white;\n  border-radius: 1rem;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\n  border: 1px solid #e2e8f0;\n  display: flex;\n  flex-direction: column;\n  transform: ${props => props.isOpen ? 'translateY(0)' : 'translateY(100%)'};\n  opacity: ${props => props.isOpen ? '1' : '0'};\n  transition: all 0.3s ease;\n  z-index: 1000;\n  \n  @media (max-width: 768px) {\n    width: calc(100vw - 2rem);\n    height: calc(100vh - 4rem);\n    bottom: 1rem;\n    right: 1rem;\n  }\n`;\n_c = ChatContainer;\nconst ChatHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem 1.5rem;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border-radius: 1rem 1rem 0 0;\n  \n  .header-info {\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n    \n    .chat-icon {\n      font-size: 1.25rem;\n    }\n    \n    .header-text {\n      h3 {\n        font-size: 1rem;\n        font-weight: 600;\n        margin: 0;\n      }\n      \n      .connection-status {\n        font-size: 0.75rem;\n        opacity: 0.9;\n      }\n    }\n  }\n  \n  .header-actions {\n    display: flex;\n    gap: 0.5rem;\n    \n    button {\n      background: none;\n      border: none;\n      color: white;\n      cursor: pointer;\n      padding: 0.25rem;\n      border-radius: 0.25rem;\n      transition: all 0.2s ease;\n      \n      &:hover {\n        background: rgba(255, 255, 255, 0.1);\n      }\n    }\n  }\n`;\n_c2 = ChatHeader;\nconst ChatBody = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n_c3 = ChatBody;\nconst ChatMessages = styled.div`\n  flex: 1;\n  padding: 1rem;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n  \n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: #f1f5f9;\n    border-radius: 3px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: #cbd5e1;\n    border-radius: 3px;\n    \n    &:hover {\n      background: #94a3b8;\n    }\n  }\n`;\n_c4 = ChatMessages;\nconst MessageBubble = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 80%;\n  align-self: ${props => props.isOwn ? 'flex-end' : 'flex-start'};\n  \n  .message-content {\n    background: ${props => {\n  if (props.isUrgent) return '#fee2e2';\n  return props.isOwn ? '#3b82f6' : '#f1f5f9';\n}};\n    color: ${props => {\n  if (props.isUrgent) return '#dc2626';\n  return props.isOwn ? 'white' : '#1e293b';\n}};\n    padding: 0.75rem 1rem;\n    border-radius: 1rem;\n    font-size: 0.875rem;\n    line-height: 1.4;\n    word-wrap: break-word;\n    border: ${props => props.isUrgent ? '2px solid #fecaca' : 'none'};\n    \n    ${props => props.isOwn && `\n      border-bottom-right-radius: 0.25rem;\n    `}\n    \n    ${props => !props.isOwn && `\n      border-bottom-left-radius: 0.25rem;\n    `}\n  }\n  \n  .message-info {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    margin: ${props => props.isOwn ? '0 0 0.25rem 0' : '0 0 0.25rem 0'};\n    justify-content: ${props => props.isOwn ? 'flex-end' : 'flex-start'};\n    \n    .sender-name {\n      font-size: 0.75rem;\n      font-weight: 600;\n      color: #64748b;\n    }\n    \n    .message-time {\n      font-size: 0.75rem;\n      color: #94a3b8;\n    }\n    \n    .urgent-badge {\n      display: flex;\n      align-items: center;\n      gap: 0.25rem;\n      font-size: 0.75rem;\n      color: #dc2626;\n      font-weight: 600;\n    }\n  }\n`;\n_c5 = MessageBubble;\nconst ChatInput = styled.div`\n  padding: 1rem;\n  border-top: 1px solid #e2e8f0;\n  background: #f8fafc;\n  \n  .input-container {\n    display: flex;\n    gap: 0.5rem;\n    align-items: flex-end;\n    \n    .message-input {\n      flex: 1;\n      border: 1px solid #d1d5db;\n      border-radius: 1.5rem;\n      padding: 0.75rem 1rem;\n      font-size: 0.875rem;\n      resize: none;\n      outline: none;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      \n      &:focus {\n        border-color: #3b82f6;\n        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n      }\n      \n      &::placeholder {\n        color: #9ca3af;\n      }\n    }\n    \n    .send-button {\n      background: #3b82f6;\n      color: white;\n      border: none;\n      border-radius: 50%;\n      width: 40px;\n      height: 40px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      \n      &:hover {\n        background: #2563eb;\n        transform: scale(1.05);\n      }\n      \n      &:disabled {\n        background: #9ca3af;\n        cursor: not-allowed;\n        transform: none;\n      }\n    }\n  }\n  \n  .input-options {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 0.5rem;\n    \n    .urgency-toggle {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.75rem;\n      color: #64748b;\n      \n      input[type=\"checkbox\"] {\n        accent-color: #dc2626;\n      }\n    }\n    \n    .character-count {\n      font-size: 0.75rem;\n      color: #94a3b8;\n    }\n  }\n`;\n_c6 = ChatInput;\nconst ChatToggle = styled.button`\n  position: fixed;\n  bottom: 2rem;\n  right: 2rem;\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n  transition: all 0.3s ease;\n  z-index: 999;\n  \n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);\n  }\n  \n  .unread-indicator {\n    position: absolute;\n    top: -5px;\n    right: -5px;\n    width: 20px;\n    height: 20px;\n    background: #ef4444;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 0.75rem;\n    font-weight: 600;\n    border: 2px solid white;\n    opacity: ${props => props.hasUnread ? '1' : '0'};\n    transition: opacity 0.3s ease;\n  }\n  \n  @media (max-width: 768px) {\n    bottom: 1rem;\n    right: 1rem;\n  }\n`;\n_c7 = ChatToggle;\nconst SystemMessage = styled.div`\n  text-align: center;\n  padding: 0.5rem;\n  margin: 0.5rem 0;\n  \n  .system-content {\n    background: #f1f5f9;\n    color: #64748b;\n    padding: 0.5rem 1rem;\n    border-radius: 1rem;\n    font-size: 0.75rem;\n    font-style: italic;\n  }\n`;\n_c8 = SystemMessage;\nconst LiveChat = ({\n  eventId,\n  eventName\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState(mockChatMessages);\n  const [newMessage, setNewMessage] = useState('');\n  const [isUrgent, setIsUrgent] = useState(false);\n  const [hasUnread, setHasUnread] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const loadChatHistory = async () => {\n    try {\n      const history = await simpleConnectionService.getChatHistory(eventId);\n      setMessages(history);\n    } catch (error) {\n      console.error('Error loading chat history:', error);\n    }\n  };\n  useEffect(() => {\n    // Configurar listeners para mensajes del chat\n    simpleConnectionService.onChatMessage(message => {\n      setMessages(prev => [...prev, message]);\n      if (!isOpen) {\n        setHasUnread(true);\n      }\n    });\n\n    // Verificar conexión\n    const checkConnection = () => {\n      setIsConnected(simpleConnectionService.isConnectedToDJSystem());\n    };\n    checkConnection();\n    const interval = setInterval(checkConnection, 5000);\n\n    // Cargar historial de chat\n    if (eventId) {\n      loadChatHistory();\n    }\n\n    // Simular mensajes de chat en tiempo real\n    const cleanupChatSimulation = simulateChatMessage(newMessage => {\n      setMessages(prev => [...prev, newMessage]);\n      if (!isOpen) {\n        setHasUnread(true);\n      }\n    });\n    return () => {\n      clearInterval(interval);\n      cleanupChatSimulation();\n    };\n  }, [eventId, isOpen]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    // Auto-scroll al último mensaje\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = () => {\n    if (!newMessage.trim() || !isConnected) return;\n    const message = {\n      senderId: 'technical-user',\n      senderName: 'Técnico',\n      senderType: 'technician',\n      message: newMessage.trim(),\n      eventId,\n      isUrgent\n    };\n    simpleConnectionService.sendChatMessage(message);\n    setNewMessage('');\n    setIsUrgent(false);\n\n    // Auto-resize textarea\n    if (inputRef.current) {\n      inputRef.current.style.height = 'auto';\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleInputChange = e => {\n    setNewMessage(e.target.value);\n\n    // Auto-resize textarea\n    e.target.style.height = 'auto';\n    e.target.style.height = Math.min(e.target.scrollHeight, 120) + 'px';\n  };\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n    setHasUnread(false);\n    if (!isOpen) {\n      setTimeout(() => {\n        var _inputRef$current;\n        (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      }, 300);\n    }\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString('es-ES', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const getSenderTypeColor = senderType => {\n    switch (senderType) {\n      case 'dj':\n        return '#10b981';\n      case 'technician':\n        return '#3b82f6';\n      case 'admin':\n        return '#8b5cf6';\n      default:\n        return '#64748b';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ChatToggle, {\n      hasUnread: hasUnread,\n      onClick: toggleChat,\n      children: [/*#__PURE__*/_jsxDEV(FaComments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), hasUnread && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unread-indicator\",\n        children: /*#__PURE__*/_jsxDEV(FaBell, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n      isOpen: isOpen,\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-icon\",\n            children: /*#__PURE__*/_jsxDEV(FaComments, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: eventName || 'Chat Técnico'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"connection-status\",\n              children: isConnected ? 'Conectado' : 'Desconectado'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleChat,\n            children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBody, {\n        children: [/*#__PURE__*/_jsxDEV(ChatMessages, {\n          children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(SystemMessage, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"system-content\",\n              children: \"No hay mensajes a\\xFAn. \\xA1Inicia la conversaci\\xF3n!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n            isOwn: message.senderType === 'technician',\n            isUrgent: message.isUrgent,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sender-name\",\n                style: {\n                  color: getSenderTypeColor(message.senderType)\n                },\n                children: message.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: formatTime(message.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 21\n              }, this), message.isUrgent && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"urgent-badge\",\n                children: [/*#__PURE__*/_jsxDEV(FaExclamationTriangle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 25\n                }, this), \"Urgente\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: message.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 19\n            }, this)]\n          }, message.id || index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: inputRef,\n              className: \"message-input\",\n              placeholder: \"Escribe tu mensaje...\",\n              value: newMessage,\n              onChange: handleInputChange,\n              onKeyPress: handleKeyPress,\n              rows: 1,\n              disabled: !isConnected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"send-button\",\n              onClick: handleSendMessage,\n              disabled: !newMessage.trim() || !isConnected,\n              children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"urgency-toggle\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: isUrgent,\n                onChange: e => setIsUrgent(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FaExclamationTriangle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this), \"Urgente\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"character-count\",\n              children: [newMessage.length, \"/500\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LiveChat, \"hu/LJrEcMGmCce8Q83Sf9fNZFXk=\");\n_c9 = LiveChat;\nexport default LiveChat;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"ChatHeader\");\n$RefreshReg$(_c3, \"ChatBody\");\n$RefreshReg$(_c4, \"ChatMessages\");\n$RefreshReg$(_c5, \"MessageBubble\");\n$RefreshReg$(_c6, \"ChatInput\");\n$RefreshReg$(_c7, \"ChatToggle\");\n$RefreshReg$(_c8, \"SystemMessage\");\n$RefreshReg$(_c9, \"LiveChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","FaComments","FaPaperPlane","FaTimes","FaExclamationTriangle","FaBell","simpleConnectionService","mockChatMessages","simulateChatMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatContainer","div","props","isOpen","_c","ChatHeader","_c2","ChatBody","_c3","ChatMessages","_c4","MessageBubble","isOwn","isUrgent","_c5","ChatInput","_c6","ChatToggle","button","hasUnread","_c7","SystemMessage","_c8","LiveChat","eventId","eventName","_s","setIsOpen","messages","setMessages","newMessage","setNewMessage","setIsUrgent","setHasUnread","isConnected","setIsConnected","messagesEndRef","inputRef","loadChatHistory","history","getChatHistory","error","console","onChatMessage","message","prev","checkConnection","isConnectedToDJSystem","interval","setInterval","cleanupChatSimulation","clearInterval","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","senderId","senderName","senderType","sendChatMessage","style","height","handleKeyPress","e","key","shiftKey","preventDefault","handleInputChange","target","value","Math","min","scrollHeight","toggleChat","setTimeout","_inputRef$current","focus","formatTime","timestamp","Date","toLocaleTimeString","hour","minute","getSenderTypeColor","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","index","color","id","ref","placeholder","onChange","onKeyPress","rows","disabled","type","checked","_c9","$RefreshReg$"],"sources":["/Users/sebamaza/Downloads/salon-fiestas-admin/src/components/LiveChat.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { \n  FaComments, \n  FaPaperPlane, \n  FaTimes, \n  FaExclamationTriangle,\n  FaBell\n} from 'react-icons/fa';\nimport { ChatMessage } from '../types';\nimport simpleConnectionService from '../services/simpleConnectionService';\nimport { mockChatMessages, simulateChatMessage } from '../services/mockDataService';\n\nconst ChatContainer = styled.div<{ isOpen: boolean }>`\n  position: fixed;\n  bottom: 2rem;\n  right: 2rem;\n  width: 400px;\n  height: 500px;\n  background: white;\n  border-radius: 1rem;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\n  border: 1px solid #e2e8f0;\n  display: flex;\n  flex-direction: column;\n  transform: ${props => props.isOpen ? 'translateY(0)' : 'translateY(100%)'};\n  opacity: ${props => props.isOpen ? '1' : '0'};\n  transition: all 0.3s ease;\n  z-index: 1000;\n  \n  @media (max-width: 768px) {\n    width: calc(100vw - 2rem);\n    height: calc(100vh - 4rem);\n    bottom: 1rem;\n    right: 1rem;\n  }\n`;\n\nconst ChatHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem 1.5rem;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border-radius: 1rem 1rem 0 0;\n  \n  .header-info {\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n    \n    .chat-icon {\n      font-size: 1.25rem;\n    }\n    \n    .header-text {\n      h3 {\n        font-size: 1rem;\n        font-weight: 600;\n        margin: 0;\n      }\n      \n      .connection-status {\n        font-size: 0.75rem;\n        opacity: 0.9;\n      }\n    }\n  }\n  \n  .header-actions {\n    display: flex;\n    gap: 0.5rem;\n    \n    button {\n      background: none;\n      border: none;\n      color: white;\n      cursor: pointer;\n      padding: 0.25rem;\n      border-radius: 0.25rem;\n      transition: all 0.2s ease;\n      \n      &:hover {\n        background: rgba(255, 255, 255, 0.1);\n      }\n    }\n  }\n`;\n\nconst ChatBody = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst ChatMessages = styled.div`\n  flex: 1;\n  padding: 1rem;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n  \n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: #f1f5f9;\n    border-radius: 3px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: #cbd5e1;\n    border-radius: 3px;\n    \n    &:hover {\n      background: #94a3b8;\n    }\n  }\n`;\n\nconst MessageBubble = styled.div<{ isOwn: boolean; isUrgent: boolean }>`\n  display: flex;\n  flex-direction: column;\n  max-width: 80%;\n  align-self: ${props => props.isOwn ? 'flex-end' : 'flex-start'};\n  \n  .message-content {\n    background: ${props => {\n      if (props.isUrgent) return '#fee2e2';\n      return props.isOwn ? '#3b82f6' : '#f1f5f9';\n    }};\n    color: ${props => {\n      if (props.isUrgent) return '#dc2626';\n      return props.isOwn ? 'white' : '#1e293b';\n    }};\n    padding: 0.75rem 1rem;\n    border-radius: 1rem;\n    font-size: 0.875rem;\n    line-height: 1.4;\n    word-wrap: break-word;\n    border: ${props => props.isUrgent ? '2px solid #fecaca' : 'none'};\n    \n    ${props => props.isOwn && `\n      border-bottom-right-radius: 0.25rem;\n    `}\n    \n    ${props => !props.isOwn && `\n      border-bottom-left-radius: 0.25rem;\n    `}\n  }\n  \n  .message-info {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    margin: ${props => props.isOwn ? '0 0 0.25rem 0' : '0 0 0.25rem 0'};\n    justify-content: ${props => props.isOwn ? 'flex-end' : 'flex-start'};\n    \n    .sender-name {\n      font-size: 0.75rem;\n      font-weight: 600;\n      color: #64748b;\n    }\n    \n    .message-time {\n      font-size: 0.75rem;\n      color: #94a3b8;\n    }\n    \n    .urgent-badge {\n      display: flex;\n      align-items: center;\n      gap: 0.25rem;\n      font-size: 0.75rem;\n      color: #dc2626;\n      font-weight: 600;\n    }\n  }\n`;\n\nconst ChatInput = styled.div`\n  padding: 1rem;\n  border-top: 1px solid #e2e8f0;\n  background: #f8fafc;\n  \n  .input-container {\n    display: flex;\n    gap: 0.5rem;\n    align-items: flex-end;\n    \n    .message-input {\n      flex: 1;\n      border: 1px solid #d1d5db;\n      border-radius: 1.5rem;\n      padding: 0.75rem 1rem;\n      font-size: 0.875rem;\n      resize: none;\n      outline: none;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      \n      &:focus {\n        border-color: #3b82f6;\n        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n      }\n      \n      &::placeholder {\n        color: #9ca3af;\n      }\n    }\n    \n    .send-button {\n      background: #3b82f6;\n      color: white;\n      border: none;\n      border-radius: 50%;\n      width: 40px;\n      height: 40px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      \n      &:hover {\n        background: #2563eb;\n        transform: scale(1.05);\n      }\n      \n      &:disabled {\n        background: #9ca3af;\n        cursor: not-allowed;\n        transform: none;\n      }\n    }\n  }\n  \n  .input-options {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 0.5rem;\n    \n    .urgency-toggle {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.75rem;\n      color: #64748b;\n      \n      input[type=\"checkbox\"] {\n        accent-color: #dc2626;\n      }\n    }\n    \n    .character-count {\n      font-size: 0.75rem;\n      color: #94a3b8;\n    }\n  }\n`;\n\nconst ChatToggle = styled.button<{ hasUnread: boolean }>`\n  position: fixed;\n  bottom: 2rem;\n  right: 2rem;\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n  transition: all 0.3s ease;\n  z-index: 999;\n  \n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);\n  }\n  \n  .unread-indicator {\n    position: absolute;\n    top: -5px;\n    right: -5px;\n    width: 20px;\n    height: 20px;\n    background: #ef4444;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 0.75rem;\n    font-weight: 600;\n    border: 2px solid white;\n    opacity: ${props => props.hasUnread ? '1' : '0'};\n    transition: opacity 0.3s ease;\n  }\n  \n  @media (max-width: 768px) {\n    bottom: 1rem;\n    right: 1rem;\n  }\n`;\n\nconst SystemMessage = styled.div`\n  text-align: center;\n  padding: 0.5rem;\n  margin: 0.5rem 0;\n  \n  .system-content {\n    background: #f1f5f9;\n    color: #64748b;\n    padding: 0.5rem 1rem;\n    border-radius: 1rem;\n    font-size: 0.75rem;\n    font-style: italic;\n  }\n`;\n\ninterface LiveChatProps {\n  eventId?: string;\n  eventName?: string;\n}\n\nconst LiveChat: React.FC<LiveChatProps> = ({ eventId, eventName }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState<ChatMessage[]>(mockChatMessages);\n  const [newMessage, setNewMessage] = useState('');\n  const [isUrgent, setIsUrgent] = useState(false);\n  const [hasUnread, setHasUnread] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  const loadChatHistory = async () => {\n    try {\n      const history = await simpleConnectionService.getChatHistory(eventId);\n      setMessages(history);\n    } catch (error) {\n      console.error('Error loading chat history:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Configurar listeners para mensajes del chat\n    simpleConnectionService.onChatMessage((message: ChatMessage) => {\n      setMessages(prev => [...prev, message]);\n      if (!isOpen) {\n        setHasUnread(true);\n      }\n    });\n\n    // Verificar conexión\n    const checkConnection = () => {\n      setIsConnected(simpleConnectionService.isConnectedToDJSystem());\n    };\n\n    checkConnection();\n    const interval = setInterval(checkConnection, 5000);\n\n    // Cargar historial de chat\n    if (eventId) {\n      loadChatHistory();\n    }\n\n    // Simular mensajes de chat en tiempo real\n    const cleanupChatSimulation = simulateChatMessage((newMessage) => {\n      setMessages(prev => [...prev, newMessage]);\n      if (!isOpen) {\n        setHasUnread(true);\n      }\n    });\n\n    return () => {\n      clearInterval(interval);\n      cleanupChatSimulation();\n    };\n  }, [eventId, isOpen]);\n\n  useEffect(() => {\n    // Auto-scroll al último mensaje\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const handleSendMessage = () => {\n    if (!newMessage.trim() || !isConnected) return;\n\n    const message: Omit<ChatMessage, 'id' | 'timestamp'> = {\n      senderId: 'technical-user',\n      senderName: 'Técnico',\n      senderType: 'technician',\n      message: newMessage.trim(),\n      eventId,\n      isUrgent\n    };\n\n    simpleConnectionService.sendChatMessage(message);\n    setNewMessage('');\n    setIsUrgent(false);\n    \n    // Auto-resize textarea\n    if (inputRef.current) {\n      inputRef.current.style.height = 'auto';\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setNewMessage(e.target.value);\n    \n    // Auto-resize textarea\n    e.target.style.height = 'auto';\n    e.target.style.height = Math.min(e.target.scrollHeight, 120) + 'px';\n  };\n\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n    setHasUnread(false);\n    if (!isOpen) {\n      setTimeout(() => {\n        inputRef.current?.focus();\n      }, 300);\n    }\n  };\n\n  const formatTime = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString('es-ES', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getSenderTypeColor = (senderType: string) => {\n    switch (senderType) {\n      case 'dj': return '#10b981';\n      case 'technician': return '#3b82f6';\n      case 'admin': return '#8b5cf6';\n      default: return '#64748b';\n    }\n  };\n\n  return (\n    <>\n      <ChatToggle hasUnread={hasUnread} onClick={toggleChat}>\n        <FaComments />\n        {hasUnread && (\n          <div className=\"unread-indicator\">\n            <FaBell />\n          </div>\n        )}\n      </ChatToggle>\n\n      <ChatContainer isOpen={isOpen}>\n        <ChatHeader>\n          <div className=\"header-info\">\n            <div className=\"chat-icon\">\n              <FaComments />\n            </div>\n            <div className=\"header-text\">\n              <h3>{eventName || 'Chat Técnico'}</h3>\n              <div className=\"connection-status\">\n                {isConnected ? 'Conectado' : 'Desconectado'}\n              </div>\n            </div>\n          </div>\n          <div className=\"header-actions\">\n            <button onClick={toggleChat}>\n              <FaTimes />\n            </button>\n          </div>\n        </ChatHeader>\n\n        <ChatBody>\n          <ChatMessages>\n            {messages.length === 0 ? (\n              <SystemMessage>\n                <div className=\"system-content\">\n                  No hay mensajes aún. ¡Inicia la conversación!\n                </div>\n              </SystemMessage>\n            ) : (\n              messages.map((message, index) => (\n                <MessageBubble \n                  key={message.id || index} \n                  isOwn={message.senderType === 'technician'}\n                  isUrgent={message.isUrgent}\n                >\n                  <div className=\"message-info\">\n                    <span className=\"sender-name\" style={{ color: getSenderTypeColor(message.senderType) }}>\n                      {message.senderName}\n                    </span>\n                    <span className=\"message-time\">\n                      {formatTime(message.timestamp)}\n                    </span>\n                    {message.isUrgent && (\n                      <span className=\"urgent-badge\">\n                        <FaExclamationTriangle />\n                        Urgente\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"message-content\">\n                    {message.message}\n                  </div>\n                </MessageBubble>\n              ))\n            )}\n            <div ref={messagesEndRef} />\n          </ChatMessages>\n\n          <ChatInput>\n            <div className=\"input-container\">\n              <textarea\n                ref={inputRef}\n                className=\"message-input\"\n                placeholder=\"Escribe tu mensaje...\"\n                value={newMessage}\n                onChange={handleInputChange}\n                onKeyPress={handleKeyPress}\n                rows={1}\n                disabled={!isConnected}\n              />\n              <button\n                className=\"send-button\"\n                onClick={handleSendMessage}\n                disabled={!newMessage.trim() || !isConnected}\n              >\n                <FaPaperPlane />\n              </button>\n            </div>\n            <div className=\"input-options\">\n              <label className=\"urgency-toggle\">\n                <input\n                  type=\"checkbox\"\n                  checked={isUrgent}\n                  onChange={(e) => setIsUrgent(e.target.checked)}\n                />\n                <FaExclamationTriangle />\n                Urgente\n              </label>\n              <span className=\"character-count\">\n                {newMessage.length}/500\n              </span>\n            </div>\n          </ChatInput>\n        </ChatBody>\n      </ChatContainer>\n    </>\n  );\n};\n\nexport default LiveChat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SACEC,UAAU,EACVC,YAAY,EACZC,OAAO,EACPC,qBAAqB,EACrBC,MAAM,QACD,gBAAgB;AAEvB,OAAOC,uBAAuB,MAAM,qCAAqC;AACzE,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpF,MAAMC,aAAa,GAAGb,MAAM,CAACc,GAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,eAAe,GAAG,kBAAkB;AAC3E,aAAaD,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,GAAG,GAAG,GAAG;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAvBIJ,aAAa;AAyBnB,MAAMK,UAAU,GAAGlB,MAAM,CAACc,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GAlDID,UAAU;AAoDhB,MAAME,QAAQ,GAAGpB,MAAM,CAACc,GAAG;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAACO,GAAA,GALID,QAAQ;AAOd,MAAME,YAAY,GAAGtB,MAAM,CAACc,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACS,GAAA,GAzBID,YAAY;AA2BlB,MAAME,aAAa,GAAGxB,MAAM,CAACc,GAA0C;AACvE;AACA;AACA;AACA,gBAAgBC,KAAK,IAAIA,KAAK,CAACU,KAAK,GAAG,UAAU,GAAG,YAAY;AAChE;AACA;AACA,kBAAkBV,KAAK,IAAI;EACrB,IAAIA,KAAK,CAACW,QAAQ,EAAE,OAAO,SAAS;EACpC,OAAOX,KAAK,CAACU,KAAK,GAAG,SAAS,GAAG,SAAS;AAC5C,CAAC;AACL,aAAaV,KAAK,IAAI;EAChB,IAAIA,KAAK,CAACW,QAAQ,EAAE,OAAO,SAAS;EACpC,OAAOX,KAAK,CAACU,KAAK,GAAG,OAAO,GAAG,SAAS;AAC1C,CAAC;AACL;AACA;AACA;AACA;AACA;AACA,cAAcV,KAAK,IAAIA,KAAK,CAACW,QAAQ,GAAG,mBAAmB,GAAG,MAAM;AACpE;AACA,MAAMX,KAAK,IAAIA,KAAK,CAACU,KAAK,IAAI;AAC9B;AACA,KAAK;AACL;AACA,MAAMV,KAAK,IAAI,CAACA,KAAK,CAACU,KAAK,IAAI;AAC/B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAcV,KAAK,IAAIA,KAAK,CAACU,KAAK,GAAG,eAAe,GAAG,eAAe;AACtE,uBAAuBV,KAAK,IAAIA,KAAK,CAACU,KAAK,GAAG,UAAU,GAAG,YAAY;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACE,GAAA,GA1DIH,aAAa;AA4DnB,MAAMI,SAAS,GAAG5B,MAAM,CAACc,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}